unzip("activity.zip")
ls
ls()
data <- read.csv("activity.csv")
data <- read.csv("activity.csv")
try(
data <- read.csv("activity.csv")
)
list.files()
files <- list.files()
"doc" in files
"doc" %in% files
"activity.csv" %in% files
files <- list.files()
if !("activity.csv" %in% files){
unzip("activity.zip")
}
if (!("activity.csv" %in% files)){
unzip("activity.zip")
}
data <- read.csv("activity.csv")
if (!("activity.csv" %in% files)){
unzip("activity.zip")
print("hola")
}
if (!("activity.csv" %in% files)){
unzip("activity.zip")
print("hola")
}
files <- list.files()
if (!("activity.csv" %in% files)){
unzip("activity.zip")
print("hola")
}
files <- list.files()
if (!("activity.csv" %in% files)){
unzip("activity.zip")
print("hola")
}
data <- read.csv("activity.csv")
rm(files)
library(dplyr)
str(data)
View(data)
table(data$steps)
summary(data)
count(data$steps)
count
?count
data %>% count(steps)
?read.csv
View(data)
data[,!is.na(data$steps)]
data[!is.na(data$steps),]
data[is.na(data$steps),]
14931+1971
14931+1971+2061+621
length(data[is.na(data$steps),])
dim(data[is.na(data$steps),])
dim(data[!is.na(data$steps),])
2304+15264
data <- read.csv("activity.csv");data
head(data)
unique(data$date)
head(data)
?sum
steps_by_day <- data %>% group_by(date) %>% summarise(date = unique(date),total_steps = sum(steps,na.rm = T)) %>% hist()
steps_by_day <- data %>% group_by(date) %>% summarise(date = unique(date),total_steps = sum(steps,na.rm = T)) %>% hist()
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
View(steps_by_day)
head(steps_by_day)
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps))
head(steps_by_day)
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
hist(steps_by_day)
hist(steps_by_day$total_steps)
hist(steps_by_day$date)
hist(data$date)
hist(data$steps)
View(steps_by_day)
hist(steps_by_day)
plot(steps_by_day)
barplot(steps_by_day)
barplot(steps_by_day[date],steps_by_day[steps])
barplot(steps_by_day$date,steps_by_day$total_steps)
barplot(steps_by_day$total_steps,steps_by_day$date)
barplot(steps_by_day$total_steps,steps_by_day$date, na.rm = T)
?baplot
?barplot
class(data$steps)
class(data$date)
?read.csv
data$date <- as.character(data$date)
class(data$date)
hist(data)
hist(data$date)
barplot(data)
plot(data)
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
class(data$date)
plot(data)
hist(data)
barplot(data)
View(steps_by_day)
unique(data$date)
?aggregate
steps_by_day <- aggregate(date,steps,data = data, FUN = sum)
steps_by_day <- aggregate(date~steps,data = data, FUN = sum)
steps_by_day <- aggregate(steps~date,data = data, FUN = sum)
hist(steps_by_day)
hist(steps_by_day$steps)
View(steps_by_day)
hist(steps_by_day$steps)
hist(steps_by_day$steps)
hist(steps_by_day$steps, main = "Total steps by day")
steps_by_day <- data %>% group_by(date) %>% summarise(date = unique(date),total_steps = sum(steps,na.rm = T)) %>% hist(steps)
steps_by_day <- data %>% group_by(date) %>% summarise(date = unique(date),total_steps = sum(steps,na.rm = T)) %>% hist($steps)
hist(steps_by_day$steps)
steps_by_day <- data %>% group_by(date) %>% summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
data <- read.csv("activity.csv");
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
hist(steps_by_day$steps)
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
steps_by_day <- data %>% group_by(date) %>%
summarise(date = unique(date),total_steps = sum(steps,na.rm = T))
hist(steps_by_day$steps)
hist(steps_by_day$steps, main = "Total steps by day")
hist(steps_by_day$total_steps)
View(data)
steps_by_day <- data %>% group_by(interval) %>%
summarise(date = unique(interval),time_interval = avg(interval,na.rm = T))
?plot
str(data)
avg_interval <- data %>% group_by(interval) %>%
summarise(date = unique(interval),time_interval = mean(interval,na.rm = T))
plot(avg_interval, type = 'p')
plot(avg_interval)
View(avg_interval)
avg_interval <- data %>% group_by(interval) %>%
summarise(date = unique(date),time_interval = mean(interval,na.rm = T))
plot(avg_interval)
rm(avg_interval)
avg_interval <- data %>% group_by(interval) %>%
summarise(date = unique(date),time_interval = mean(interval,na.rm = T))
View(avg_interval)
View(data)
avg_interval <- data %>% group_by(interval) %>%
summarise(date = unique(date))
plot(avg_interval)
View(avg_interval)
avg_interval <- data %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_interval = mean(steps,na.rm = T))
plot(avg_interval)
plot(avg_interval, type = 'l')
View(avg_interval)
max(avg_interval)
which.max(steps_by_day)
which.max(steps_by_day$total_steps)
which.max(avg_interval$total_steps)
avg_interval <- data %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_interval = mean(steps,na.rm = T))
plot(avg_interval, type = 'l')
avg_interval <- data %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_steps = mean(steps,na.rm = T))
plot(avg_interval, type = 'l')
which.max(avg_interval$mean_steps)
avg_interval[which.max(avg_interval$mean_steps)]
avg_interval[which.max(avg_interval$mean_steps),]
avg_interval[which.max(avg_interval$mean_steps),]$interval
table(is.na(data)$steps)
table(is.na(data))
table(is.na(data$steps))
15246+17586*2
data[!is.na(data$steps)]$interval
data[!is.na(data$steps),]$interval
table(data[!is.na(data$steps),]$interval)
unique(data[!is.na(data$steps),]$interval)
length(unique(data[!is.na(data$steps),]$interval))
length(unique(data[!is.na(data$steps),]$interval))*5
(unique(data[!is.na(data$steps),]$interval))
length(data[!is.na(data$steps),]$interval)
data[!is.na(data$steps),]$interval
table(is.na(data$steps))
table(is.na(data$steps))$FALSE
table(is.na(data$steps))
table(is.na(data$steps))[1]
table(is.na(data$steps))[2]
table(is.na(data$steps))[[2]]
View(avg_interval)
length(data[!is.na(data$steps),]$interval)
length(data[is.na(data$steps),]$interval)
(data[is.na(data$steps),]$interval)
table(data[is.na(data$steps),]$interval)
table(data[!is.na(data$steps),]$interval)
table(avg_interval$interval)
datafull <- data
View(avg_interval)
View(datafull)
View(avg_interval)
for(i in 1:nrow(data)){
if (is.na(datafull[i,]$steps)){
datafull[i,]$steps <- avg_interval[i,]$mean_steps
}
}
View(avg_interval)
View(datafull)
datafull <- data
for(i in 1:nrow(data)){
if (is.na(datafull[i,]$steps)){
datafull[i,]$steps <- avg_interval[i,]$mean_steps
}
}
data$date
class(data$date)
as.Date(data$date)
dates <- as.Date(data$date)
class(dates)
wday(dates)
library(lubridate)
wday(dates)
wday(dates, label = TRUE)
datafull$date <- as.date(datafull$date)
datafull$date <- as.Date(datafull$date)
library(lubridate)
unique(wday(dates, label = TRUE)
=
unique(wday(dates, label = TRUE))
unique(wday(dates))
datafull <- mutate(datafull,week_time = ifelse(wday(date) %in% c(1,2)),"weekend","weekday")
datafull <- mutate(datafull,week_time = ifelse(wday(date) %in% c(1,2),"weekend","weekday"))
View(datafull)
wday(as.Date("2012-10-01"))
wday(as.Date("2012-11-30"))
?par
par(mfrow(2,1))
par(mfrow = c(2,1))
plot(avg_interval, type = 'l')
plot(avg_interval, type = 'l')
library(lattice)
View(datafull)
avg_interval <- datafull %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_steps = mean(steps,na.rm = T), week_time = unique(week_time))
View(avg_interval)
table(avg_interval$week_time)
avg_interval <- datafull %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_steps = mean(steps,na.rm = T), week_time = (week_time))
avg_interval <- datafull %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_steps = mean(steps,na.rm = T), week_time)
View(avg_interval)
avg_interval <- datafull %>% group_by(interval) %>%
summarise(interval = unique(interval),mean_steps = mean(steps,na.rm = T), week_time = summary(week_time))
days <- split(datafull, week_time)
days <- split(datafull, datafull$week_time)
View(days)
str(days)
weekday,weekend <- split(datafull, datafull$week_time)
weekday;weekend <- split(datafull, datafull$week_time)
c(weekday,weekend) <- split(datafull, datafull$week_time)
week <- split(datafull, datafull$week_time)
weekend <- week[1]
weekend <- week[[1]]
weekday <- week[[2]]
View(weekday)
View(weekday)
weekend <- week[[2]]
weekday <- week[[1]]
?par
View(week)
View(weekday)
